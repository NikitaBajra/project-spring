<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:annotation-config />
	
	<!-- Package location which contain all the spring annotations like @Autowire, @Repository, @Resource -->
	<context:component-scan base-package="com.outlines.project" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- <mvc:resources location="/src/main/java/" mapping="com.outlines.entity"/>  -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- DataSource for JDBC connection -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/project_ontlines" />
        <property name="username" value="root" />
        <property name="password" value="" />
        
    </bean>
 
    <!-- Hibernate 4 SessionFactory Bean -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- Package where all the Entity(model) exits. -->
        <property name="packagesToScan">
            <list>
                <value>com.outlines.project.entity</value>
            </list>
        </property>
        
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop> <!--create, update, validate -->
                <!-- <prop key="hibernate.mapping">com.outlines.entity</prop> -->
            </props>
        </property>
    </bean>
     
   <!--  <bean id = "ingredientService" class = "com.outlines.project.service.IngredientServiceImpl">
    	<property name="ingredientDao" ref = "ingredient" />
    </bean> -->
    
   <!--  <bean id = "productDao" class = "com.outlines.project.dao.ProductDaoImpl">
    	<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
     <bean id = "productService" class = "com.outlines.project.service.ProductServiceImpl">
    	<property name="productDao" ref = "productDao" />
    </bean> -->
    
    <!-- Transaction Manager to make Transaction Support-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
     
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20000000"/>
    </bean>    
</beans>

